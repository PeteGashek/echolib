# key phrases in here are case sensitive in here.
# the actual 'key phrase' from the todo item is not, but other than that assume you have to use the same case 
# as is in this sample. For instance 'todoListener.1=' is valid, while 'TODOLISTENER.1=' is not.
# put your credentials here
username=someuser
password=someuserspassword

# set how often we check for todos (in seconds)
pollingInterval=10

# set the number of items to pull for the request.  100 is probably over kill
pollingItemCount=100

# afer a todo is processed, it gets marked as complete.  After 'cancelledMinutesToLive' iit gets marked as deleted.
cancelledMinutesToLive=10

# Add todo listeners to perform tasks from todo events
# the format of these lines is:
# todoListener.#=<class> key=<key phrase>,command=<options>
# Replace the # with the sequence of listener.  This is not very smart it starts at one and increments the count until it does ot find a number.  It you leave a numerial
# gap, it won't load any listeners after the gap.
# The key phrase can be a string of words if you want.  The command is separated by a comma, so you can't have a comma in the key phrase.
# the command string is specific to the class you are using.  For the ExecuteExternalProecessPlugin it is the command line parameters 
# for the command you want to execute, starting with the command itself.  If any element needs to have a spave in it then you have to enclose tha element in double quotes
# You can use the transposition key '%text%' which will be replacesd by everything in the todo item after the key phrase.
#
# This first one will exit the program when the key phrase 'stop poller' is at te beginning of a todo item.
# change the key phrase if you want.  The ShutdownTodoItemRetrievedPoller just exits the utility.
todoListener.1=com.javasteam.amazon.echo.plugin.ShutdownTodoItemRetrievedPoller key=stop poller

# here is an example of calling cygwmin bash.exe to run a bask script passing in all of the text ater the keyword (script) as the $1 argument to the script
# this one will not be useful o you, but, you can do the same thing with an editor, an mp3 player, or whatever.
todoListener.2=com.javasteam.amazon.echo.plugin.ExecuteExternalProcessPlugin key=script,command=c:/cygwin64/bin/bash.exe c:/scripts/script1.sh %text%

# Another example using the %text% transposition in an editor.
todoListener.3=com.javasteam.amazon.echo.plugin.ExecuteExternalProcessPlugin key=edit,command="c:/Program\ Files\ \(x86\)/Vim/vim74/gvim.exe" %text%

# THis one launches the game 'skyrim' installed from steam with the phrase 'Alexa add play skyrim to my todo list'
# yeah nerdy, but cool.  In a nerdy way.
todoListener.4=com.javasteam.amazon.echo.plugin.ExecuteExternalProcessPlugin key=play skyrim,command="c:/Program\ Files\ \(x86\)/Steam/SteamApps/common/Skyrim/skse_loader.exe"

# This is an example of what I call todo chaining. CreateTodoPlugin will create one or more new todos.  These todos can cause other events to occur
# on subsequent todo list processing.
# this example isn't very useful since it starts skyrim and a text editor
todoListener.5=com.javasteam.amazon.echo.plugin.CreateTodoPlugin key=create plug in,command="play skyrim" "edit c:/someFile.txt"

# You can have as many processes handle a single todo item as you want.  This one starts notepad editng the script we started in todoListener.2
# note that we are using the same key phrase as in todoListener.2 (script).  So if you add a todo item that begins with "script', foth todoListener 2 and 6
# will get run for that todo item.
todoListener.6=com.javasteam.amazon.echo.plugin.ExecuteExternalProcessPlugin key=script,command=c:/WINDOWS/System32/notepad.exe c:/scripts/script1.sh

